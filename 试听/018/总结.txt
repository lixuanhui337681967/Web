# 总结

#### Continue和Break

break:立即跳出整个循环，即循环结束，开始执行循环后面的内容（直接跳到大括号）

continue:立即跳出当前循环，继续下一次循环（跳到i++的地方）

##### 循环语句的区别

1. 循环结构的表达式不同

2. 执行时判断方式不同

3. 执行次数不同

   do-while循环是先执行后判断，执行次数至少为一次。

   for循环是先判断后执行，可以不执行中间循环体。

   while循环先判断后执行，可以不执行中间循环体。

4. 执行末尾循环体的顺序不同

#### 数组

所谓数组，就是将多个元素（通常是同一类型）按一定顺序排列放到一个集合中，那么这个集合我们就称之为数组。

数组是一个有序的列表，可以在数组中存放任意的数据，并且数组的长度可以动态的调整。

创建数组

```javascript
var arr1 = [];
var arr2 = [1, 3, 5];
var arr3 = ['a', 'b', 'c', 'd'];
```

使用length获取数组的长度，即数组中有几个数据

```javascript
        console.log("arr2的数组长度：" + arr2.length);
//arr3.length = 0; 代表清空该数组
```

使用循环遍历数组，循环的初始变量为下标

```javascript
      for (var i = 0; i < arr3.length; i++) {
            console.log("下标为" + i + "的元素值是" + arr3[i]);
        }
        console.log("---------------------------")
```

赋值

```javascript
  arr3[2] = 'qq'; //如果是现有的下标会覆盖原有的值 2 < i
  arr3[4] = "aa"; //如果不是现有的下标，正常新增数组值 4 > i
  arr3.push('zz'); //不使用下标，会在上一个下标元素后继续添加数据
```


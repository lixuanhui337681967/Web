# 总结

#### 流程控制

###### 分支结构

1. if语句

   - if 语句 - 只有当指定条件为 true 时，使用该语句来执行代码

   - if...else 语句 - 当条件为 true 时执行代码，当条件为 false 时执行其他代码

   - if...else if....else 语句- 使用该语句来选择多个代码块之一来执行

     ```javascript
     第一种
     if (/* 条件表达式 */) {
      // 执行语句
     }
     第二种
     if (/* 条件表达式 */){
      // 成立执行语句
     } else {
      // 否则执行语句
     }	
     第三种
     if (/* 条件1 */){
      // 成立执行语句
     } else if (/* 条件2 */){
      // 成立执行语句
     } else if (/* 条件3 */){
      // 成立执行语句
     } else {
      // 最后默认执行语句
     }
     ```

     

2. 三元运算符

   表达式1 ? 表达式2 : 表达式3

   是对if……else语句的一种简化写法

   ```javascript
   console.log(10 > 20 ? "对" : "错");
   ```

   

3. switch语句

   ```javascript
   switch (expression) {
    case 常量1:
      语句;
      break;
    case 常量2:
      语句;
      break;
    case 常量3:
      语句;
      break;
    …
    case 常量n:
      语句;
      break;
    default:
      语句;
      break;
   }
   ```

   break可以省略，如果省略，代码会继续执行下一个case。

   default 关键词来规定匹配不存在时做的事情。

   ##### 分支结构总结：

   if语句表达式的结果为boolean类型。

   switch case 使用严格比较（===），值必须与要匹配的类型相同。

###### 循环结构

1. while语句

   ```javascript
   // 当循环条件为true时，执行循环体，
   // 当循环条件为false时，结束循环。
   while (循环条件) {
    //循环体	
   }
   ```

   

2. do-while语句

   ```javascript
   do {
    // 循环体;
   } while (循环条件);
   ```

   

3. for语句

   ```javascript
   // for循环的表达式之间用的是;号分隔的，千万不要写成,
   for (初始化表达式1; 判断表达式2; 自增表达式3) {
    // 循环体4
   }
   ```

   

4. for循环多个变量判断原理

   ```javascript
   for(i=0, j=0; i<10, j<6; i++, j++){
   　　k = i + j;
   　　console.log(i+"+"+j+"="+k);
   }
   ```

   

5. continue和break

   break:立即跳出整个循环，即循环结束，开始执行循环后面的内容（直接跳到大括号）

   continue:立即跳出当前循环，继续下一次循环（跳到i++的地方）

   ##### 循环语句的区别

   1. 循环结构的表达式不同

   2. 执行时判断方式不同

   3. 执行次数不同

      do-while循环是先执行后判断，执行次数至少为一次。

      for循环是先判断后执行，可以不执行中间循环体。

      while循环先判断后执行，可以不执行中间循环体。

   4. 执行末尾循环体的顺序不同

##### 